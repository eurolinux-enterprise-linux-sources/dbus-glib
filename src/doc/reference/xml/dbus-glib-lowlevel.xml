<?xml version="1.0"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN" 
               "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd" [
<!ENTITY dbus-binding-tool SYSTEM "dbus-binding-tool.xml">
<!ENTITY version SYSTEM "version.xml">
]>
<refentry id="dbus-glib-DBus-GLib-low-level">
<refmeta>
<refentrytitle role="top_of_page" id="dbus-glib-DBus-GLib-low-level.top_of_page">DBus GLib low level</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>DBUS-GLIB Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>DBus GLib low level</refname>
<refpurpose>DBus lower level functions</refpurpose>
</refnamediv>
<refsect1 id="dbus-glib-DBus-GLib-low-level.stability-level">
<title>Stability Level</title>
Unstable, unless otherwise indicated
</refsect1>

<refsynopsisdiv id="dbus-glib-DBus-GLib-low-level.synopsis" role="synopsis">
<title role="synopsis.title">Synopsis</title>

<synopsis>
<link linkend="void">void</link>                <link linkend="dbus-set-g-error">dbus_set_g_error</link>                    (<link linkend="GError">GError</link> **gerror,
                                                         <link linkend="DBusError">DBusError</link> *derror);
<link linkend="void">void</link>                <link linkend="dbus-connection-setup-with-g-main">dbus_connection_setup_with_g_main</link>   (<link linkend="DBusConnection">DBusConnection</link> *connection,
                                                         <link linkend="GMainContext">GMainContext</link> *context);
<link linkend="void">void</link>                <link linkend="dbus-server-setup-with-g-main">dbus_server_setup_with_g_main</link>       (<link linkend="DBusServer">DBusServer</link> *server,
                                                         <link linkend="GMainContext">GMainContext</link> *context);
</synopsis>
</refsynopsisdiv>









<refsect1 id="dbus-glib-DBus-GLib-low-level.description" role="desc">
<title role="desc.title">Description</title>
<para>
These functions can be used to access lower level of DBus.</para>
<para>
</para>
</refsect1>

<refsect1 id="dbus-glib-DBus-GLib-low-level.details" role="details">
<title role="details.title">Details</title>
<refsect2 id="dbus-set-g-error" role="function">
<title>dbus_set_g_error ()</title>
<indexterm zone="dbus-set-g-error"><primary sortas="dbus_set_g_error">dbus_set_g_error</primary></indexterm><programlisting><link linkend="void">void</link>                dbus_set_g_error                    (<link linkend="GError">GError</link> **gerror,
                                                         <link linkend="DBusError">DBusError</link> *derror);</programlisting>
<para>
Store the information from a DBus method error return into a
GError.  For the normal case of an arbitrary remote process,
the error code will be DBUS_GERROR_REMOTE_EXCEPTION.  Now,
DBus errors have two components; a message and a "name". 
The former is an arbitrary (normally American English) string.  
The second is a string like com.example.FooFailure which 
programs can use as a conditional source.  Because a GError
only has one string, we use a hack to encode both values:
</para>
<para>
&lt;human readable string&gt;&lt;null&gt;&lt;error name&gt;&lt;null&gt;
</para>
<para>
You can use the following code to retrieve both values:
</para>
<para>
<informalexample><programlisting>const char *msg = error->message;
size_t len = strlen(msg);
const char *error_name = msg+len+1;</programlisting></informalexample></para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>gerror</parameter>&#160;:</term>
<listitem><simpara> an error
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>derror</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="dbus-connection-setup-with-g-main" role="function">
<title>dbus_connection_setup_with_g_main ()</title>
<indexterm zone="dbus-connection-setup-with-g-main"><primary sortas="dbus_connection_setup_with_g_main">dbus_connection_setup_with_g_main</primary></indexterm><programlisting><link linkend="void">void</link>                dbus_connection_setup_with_g_main   (<link linkend="DBusConnection">DBusConnection</link> *connection,
                                                         <link linkend="GMainContext">GMainContext</link> *context);</programlisting>
<para>
Sets the watch and timeout functions of a <link linkend="DBusConnection"><type>DBusConnection</type></link>
to integrate the connection with the GLib main loop.
Pass in <link linkend="NULL--CAPS"><type>NULL</type></link> for the <link linkend="GMainContext"><type>GMainContext</type></link> unless you're
doing something specialized.
</para>
<para>
If called twice for the same context, does nothing the second
time. If called once with context A and once with context B,
context B replaces context A as the context monitoring the
connection.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>connection</parameter>&#160;:</term>
<listitem><simpara> the connection
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>context</parameter>&#160;:</term>
<listitem><simpara> the <link linkend="GMainContext"><type>GMainContext</type></link> or <link linkend="NULL--CAPS"><type>NULL</type></link> for default context
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="dbus-server-setup-with-g-main" role="function">
<title>dbus_server_setup_with_g_main ()</title>
<indexterm zone="dbus-server-setup-with-g-main"><primary sortas="dbus_server_setup_with_g_main">dbus_server_setup_with_g_main</primary></indexterm><programlisting><link linkend="void">void</link>                dbus_server_setup_with_g_main       (<link linkend="DBusServer">DBusServer</link> *server,
                                                         <link linkend="GMainContext">GMainContext</link> *context);</programlisting>
<para>
Sets the watch and timeout functions of a <link linkend="DBusServer"><type>DBusServer</type></link>
to integrate the server with the GLib main loop.
In most cases the context argument should be <link linkend="NULL--CAPS"><type>NULL</type></link>.
</para>
<para>
If called twice for the same context, does nothing the second
time. If called once with context A and once with context B,
context B replaces context A as the context monitoring the
connection.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>server</parameter>&#160;:</term>
<listitem><simpara> the server
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>context</parameter>&#160;:</term>
<listitem><simpara> the <link linkend="GMainContext"><type>GMainContext</type></link> or <link linkend="NULL--CAPS"><type>NULL</type></link> for default
</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>




</refentry>
