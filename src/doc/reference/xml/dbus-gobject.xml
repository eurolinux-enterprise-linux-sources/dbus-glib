<?xml version="1.0"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN" 
               "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd" [
<!ENTITY dbus-binding-tool SYSTEM "dbus-binding-tool.xml">
<!ENTITY version SYSTEM "version.xml">
]>
<refentry id="dbus-glib-DBus-GObject-related-functions">
<refmeta>
<refentrytitle role="top_of_page" id="dbus-glib-DBus-GObject-related-functions.top_of_page">DBus GObject related functions</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>DBUS-GLIB Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>DBus GObject related functions</refname>
<refpurpose>Exporting a <link linkend="GObject"><type>GObject</type></link> remotely</refpurpose>
</refnamediv>
<refsect1 id="dbus-glib-DBus-GObject-related-functions.stability-level">
<title>Stability Level</title>
Stable, unless otherwise indicated
</refsect1>

<refsynopsisdiv id="dbus-glib-DBus-GObject-related-functions.synopsis" role="synopsis">
<title role="synopsis.title">Synopsis</title>

<synopsis>
#define             <link linkend="DBUS-TYPE-G-OBJECT-PATH--CAPS">DBUS_TYPE_G_OBJECT_PATH</link>
                    <link linkend="DBusGObjectInfo">DBusGObjectInfo</link>;
<link linkend="void">void</link>                <link linkend="dbus-g-object-type-install-info">dbus_g_object_type_install_info</link>     (<link linkend="GType">GType</link> object_type,
                                                         const <link linkend="DBusGObjectInfo">DBusGObjectInfo</link> *info);
<link linkend="GType">GType</link>               <link linkend="dbus-g-object-path-get-g-type">dbus_g_object_path_get_g_type</link>       (void);
<link linkend="void">void</link>                <link linkend="dbus-g-object-register-marshaller">dbus_g_object_register_marshaller</link>   (<link linkend="GClosureMarshal">GClosureMarshal</link> marshaller,
                                                         <link linkend="GType">GType</link> rettype,
                                                         ...);
<link linkend="void">void</link>                <link linkend="dbus-g-object-register-marshaller-array">dbus_g_object_register_marshaller_array</link>
                                                        (<link linkend="GClosureMarshal">GClosureMarshal</link> marshaller,
                                                         <link linkend="GType">GType</link> rettype,
                                                         <link linkend="guint">guint</link> n_types,
                                                         const <link linkend="GType">GType</link> *types);
</synopsis>
</refsynopsisdiv>









<refsect1 id="dbus-glib-DBus-GObject-related-functions.description" role="desc">
<title role="desc.title">Description</title>
<para>
FIXME</para>
<para>
</para>
</refsect1>

<refsect1 id="dbus-glib-DBus-GObject-related-functions.details" role="details">
<title role="details.title">Details</title>
<refsect2 id="DBUS-TYPE-G-OBJECT-PATH--CAPS" role="macro">
<title>DBUS_TYPE_G_OBJECT_PATH</title>
<indexterm zone="DBUS-TYPE-G-OBJECT-PATH--CAPS"><primary sortas="DBUS_TYPE_G_OBJECT_PATH">DBUS_TYPE_G_OBJECT_PATH</primary></indexterm><programlisting>#define DBUS_TYPE_G_OBJECT_PATH (dbus_g_object_path_get_g_type ())
</programlisting>
<para>
</para></refsect2>
<refsect2 id="DBusGObjectInfo" role="struct">
<title>DBusGObjectInfo</title>
<indexterm zone="DBusGObjectInfo"><primary sortas="DBusGObjectInfo">DBusGObjectInfo</primary></indexterm><programlisting>typedef struct {
  int   format_version;
                       
  const DBusGMethodInfo *method_infos;
  int   n_method_infos;                
  const char *data; 
  const char *exported_signals;  
  const char *exported_properties; 
} DBusGObjectInfo;
</programlisting>
<para>
Introspection data for a <link linkend="GObject"><type>GObject</type></link>, normally autogenerated by
a tool such as <link linkend="dbus-binding-tool"><type>dbus-binding-tool</type></link>.</para>
<para>
</para><variablelist role="struct">
<varlistentry>
<term><link linkend="int">int</link>&#160;<structfield>format_version</structfield>;</term>
<listitem><simpara> Allows us to change the rest of this struct
  by adding DBusGObjectInfo2, DBusGObjectInfo3, etc.
</simpara></listitem>
</varlistentry>
<varlistentry>
<term>const&#160;<link linkend="DBusGMethodInfo">DBusGMethodInfo</link>&#160;*<structfield>method_infos</structfield>;</term>
<listitem><simpara>  Array of method pointers 
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><link linkend="int">int</link>&#160;<structfield>n_method_infos</structfield>;</term>
<listitem><simpara> Length of the infos array 
</simpara></listitem>
</varlistentry>
<varlistentry>
<term>const&#160;<link linkend="char">char</link>&#160;*<structfield>data</structfield>;</term>
<listitem><simpara> Introspection data 
</simpara></listitem>
</varlistentry>
<varlistentry>
<term>const&#160;<link linkend="char">char</link>&#160;*<structfield>exported_signals</structfield>;</term>
<listitem><simpara> Exported signals
</simpara></listitem>
</varlistentry>
<varlistentry>
<term>const&#160;<link linkend="char">char</link>&#160;*<structfield>exported_properties</structfield>;</term>
<listitem><simpara> Exported properties 
</simpara></listitem>
</varlistentry>
</variablelist></refsect2>
<refsect2 id="dbus-g-object-type-install-info" role="function">
<title>dbus_g_object_type_install_info ()</title>
<indexterm zone="dbus-g-object-type-install-info"><primary sortas="dbus_g_object_type_install_info">dbus_g_object_type_install_info</primary></indexterm><programlisting><link linkend="void">void</link>                dbus_g_object_type_install_info     (<link linkend="GType">GType</link> object_type,
                                                         const <link linkend="DBusGObjectInfo">DBusGObjectInfo</link> *info);</programlisting>
<para>
Install introspection information about the given object <link linkend="GType"><type>GType</type></link>
sufficient to allow methods on the object to be invoked by name.
The introspection information is normally generated by
dbus-glib-tool, then this function is called in the
<link linkend="class-init"><function>class_init()</function></link> for the object class.
</para>
<para>
Once introspection information has been installed, instances of the
object registered with #<link linkend="dbus-g-connection-register-g-object"><function>dbus_g_connection_register_g_object()</function></link> can have
their methods invoked remotely.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>object_type</parameter>&#160;:</term>
<listitem><simpara> <link linkend="GType"><type>GType</type></link> for the object
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>info</parameter>&#160;:</term>
<listitem><simpara> introspection data generated by <link linkend="dbus-glib-tool"><type>dbus-glib-tool</type></link>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="dbus-g-object-path-get-g-type" role="function">
<title>dbus_g_object_path_get_g_type ()</title>
<indexterm zone="dbus-g-object-path-get-g-type"><primary sortas="dbus_g_object_path_get_g_type">dbus_g_object_path_get_g_type</primary></indexterm><programlisting><link linkend="GType">GType</link>               dbus_g_object_path_get_g_type       (void);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="dbus-g-object-register-marshaller" role="function">
<title>dbus_g_object_register_marshaller ()</title>
<indexterm zone="dbus-g-object-register-marshaller"><primary sortas="dbus_g_object_register_marshaller">dbus_g_object_register_marshaller</primary></indexterm><programlisting><link linkend="void">void</link>                dbus_g_object_register_marshaller   (<link linkend="GClosureMarshal">GClosureMarshal</link> marshaller,
                                                         <link linkend="GType">GType</link> rettype,
                                                         ...);</programlisting>
<para>
Register a <link linkend="GClosureMarshal"><type>GClosureMarshal</type></link> to be used for signal invocations,
giving its return type and a list of parameter types,
followed by <link linkend="G-TYPE-INVALID--CAPS"><literal>G_TYPE_INVALID</literal></link>.
</para>
<para>
This function will not be needed once GLib includes libffi.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>marshaller</parameter>&#160;:</term>
<listitem><simpara> a GClosureMarshal to be used for invocation
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>rettype</parameter>&#160;:</term>
<listitem><simpara> a GType for the return type of the function
@:... The parameter <link linkend="GTypes"><type>GTypes</type></link>, followed by <link linkend="G-TYPE-INVALID--CAPS"><literal>G_TYPE_INVALID</literal></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>...</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="dbus-g-object-register-marshaller-array" role="function">
<title>dbus_g_object_register_marshaller_array ()</title>
<indexterm zone="dbus-g-object-register-marshaller-array"><primary sortas="dbus_g_object_register_marshaller_array">dbus_g_object_register_marshaller_array</primary></indexterm><programlisting><link linkend="void">void</link>                dbus_g_object_register_marshaller_array
                                                        (<link linkend="GClosureMarshal">GClosureMarshal</link> marshaller,
                                                         <link linkend="GType">GType</link> rettype,
                                                         <link linkend="guint">guint</link> n_types,
                                                         const <link linkend="GType">GType</link> *types);</programlisting>
<para>
Register a <link linkend="GClosureMarshal"><type>GClosureMarshal</type></link> to be used for signal invocations.
<parameter>see_also</parameter> <link linkend="dbus-g-object-register-marshaller"><type>dbus_g_object_register_marshaller</type></link></para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>marshaller</parameter>&#160;:</term>
<listitem><simpara> a <link linkend="GClosureMarshal"><type>GClosureMarshal</type></link> to be used for invocation
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>rettype</parameter>&#160;:</term>
<listitem><simpara> a <link linkend="GType"><type>GType</type></link> for the return type of the function
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>n_types</parameter>&#160;:</term>
<listitem><simpara> number of function parameters
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>types</parameter>&#160;:</term>
<listitem><simpara> a C array of GTypes values
</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>



<refsect1 id="dbus-glib-DBus-GObject-related-functions.see-also">
<title>See Also</title>
#GObject
</refsect1>

</refentry>
